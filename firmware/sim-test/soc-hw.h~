#ifndef SPIKEHW_H
#define SPIKEHW_H

#define PROMSTART 0x00000000
#define RAMSTART  0x00000800
#define RAMSIZE   0x400
#define RAMEND    (RAMSTART + RAMSIZE)

#define RAM_START 0x40000000
#define RAM_SIZE  0x00002000

#define FCPU      50000000

#define UART_RXBUFSIZE 32

/****************************************************************************
 * Types
 */
typedef unsigned int  uint32_t;    // 32 Bit
typedef signed   int   int32_t;    // 32 Bit

typedef unsigned char  uint8_t;    // 8 Bit
typedef signed   char   int8_t;    // 8 Bit

/****************************************************************************
 * Interrupt handling
 */
typedef void(*isr_ptr_t)(void);

void     irq_enable();
void     irq_disable();
void     irq_set_mask(uint32_t mask);
uint32_t irq_get_mak();

void     isr_init();
void     isr_register(int irq, isr_ptr_t isr);
void     isr_unregister(int irq);

/****************************************************************************
 * General Stuff
 */
void     halt();
void     jump(uint32_t addr);


/***************************************************************************
 * UART0
 */
#define UART_DR   0x01                    // RX Data Ready
#define UART_ERR  0x02                    // RX Error
#define UART_BUSY 0x10                    // TX Busy

typedef struct {
   volatile uint32_t ucr;
   volatile uint32_t rxtx;
} uart_t;

void uart_init();
void uart_putchar(char c);
void uart_putstr(char *str);
char uart_getchar();

/***************************************************************************
 * LCD0
 */
// LCD Control
#define LCD_RDY   0x01                    // Ready
#define LCD_BUSY  0x10                    // Busy
// LCD Instruction
#define LCD_WR    0x01                    // Write
#define LCD_CLR   0x02                    // Clear
#define LCD_CHR   0x10                    // Change Row

typedef struct {
   volatile uint32_t lcd_cr;
   volatile uint32_t data0;
   volatile uint32_t data1;
   volatile uint32_t data2;
   volatile uint32_t data3;
   volatile uint32_t data4;
   volatile uint32_t lcd_ins;
} lcd_t;

void lcd_wait();
void lcd_write(uint32_t dat0, uint32_t dat1, uint32_t dat2, uint32_t dat3, uint32_t dat4);
void lcd_clear();

/***************************************************************************
 * KEY0
 */
#define KEY_IRQ   0x01                    // IRQ

typedef struct {
   volatile uint32_t key_cr;
   volatile uint32_t data;
} key_t;

/***************************************************************************
 * LCD0
 */
// SIM Control
#define SIM_DONE  0x01                    // Done
#define SIM_BUSY  0x02                    // Busy
// SIM Enable
#define SIM_EN    0x10                    // Enable SIM

typedef struct {
   volatile uint32_t sim_cr;
   volatile uint32_t data0;
   volatile uint32_t data1;
   volatile uint32_t data2;
   volatile uint32_t data3;
   volatile uint32_t data4;
   volatile uint32_t sim_reg;
} sim_t;


/***************************************************************************
 * Pointer to actual components
 */
extern lcd_t    *lcd0;
extern key_t    *key0;
extern sim_t    *sim0;
extern uart_t   *uart0;
extern uint32_t *sram0;

#endif // SPIKEHW_H
